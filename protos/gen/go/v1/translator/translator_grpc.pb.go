// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: v1/translator/translator.proto

package translator

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TranslateServiceClient is the client API for TranslateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TranslateServiceClient interface {
	Translate(ctx context.Context, opts ...grpc.CallOption) (TranslateService_TranslateClient, error)
}

type translateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTranslateServiceClient(cc grpc.ClientConnInterface) TranslateServiceClient {
	return &translateServiceClient{cc}
}

func (c *translateServiceClient) Translate(ctx context.Context, opts ...grpc.CallOption) (TranslateService_TranslateClient, error) {
	stream, err := c.cc.NewStream(ctx, &TranslateService_ServiceDesc.Streams[0], "/translator.v1.TranslateService/Translate", opts...)
	if err != nil {
		return nil, err
	}
	x := &translateServiceTranslateClient{stream}
	return x, nil
}

type TranslateService_TranslateClient interface {
	Send(*TranslateRequest) error
	Recv() (*TranslateResponse, error)
	grpc.ClientStream
}

type translateServiceTranslateClient struct {
	grpc.ClientStream
}

func (x *translateServiceTranslateClient) Send(m *TranslateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *translateServiceTranslateClient) Recv() (*TranslateResponse, error) {
	m := new(TranslateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TranslateServiceServer is the server API for TranslateService service.
// All implementations must embed UnimplementedTranslateServiceServer
// for forward compatibility
type TranslateServiceServer interface {
	Translate(TranslateService_TranslateServer) error
	mustEmbedUnimplementedTranslateServiceServer()
}

// UnimplementedTranslateServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTranslateServiceServer struct {
}

func (UnimplementedTranslateServiceServer) Translate(TranslateService_TranslateServer) error {
	return status.Errorf(codes.Unimplemented, "method Translate not implemented")
}
func (UnimplementedTranslateServiceServer) mustEmbedUnimplementedTranslateServiceServer() {}

// UnsafeTranslateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TranslateServiceServer will
// result in compilation errors.
type UnsafeTranslateServiceServer interface {
	mustEmbedUnimplementedTranslateServiceServer()
}

func RegisterTranslateServiceServer(s grpc.ServiceRegistrar, srv TranslateServiceServer) {
	s.RegisterService(&TranslateService_ServiceDesc, srv)
}

func _TranslateService_Translate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TranslateServiceServer).Translate(&translateServiceTranslateServer{stream})
}

type TranslateService_TranslateServer interface {
	Send(*TranslateResponse) error
	Recv() (*TranslateRequest, error)
	grpc.ServerStream
}

type translateServiceTranslateServer struct {
	grpc.ServerStream
}

func (x *translateServiceTranslateServer) Send(m *TranslateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *translateServiceTranslateServer) Recv() (*TranslateRequest, error) {
	m := new(TranslateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TranslateService_ServiceDesc is the grpc.ServiceDesc for TranslateService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TranslateService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "translator.v1.TranslateService",
	HandlerType: (*TranslateServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Translate",
			Handler:       _TranslateService_Translate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "v1/translator/translator.proto",
}
